%% function testEnd2End(image)
curdir = pwd
imagesdir = '/images2Cut/';
rootdir = strcat(curdir,imagesdir,'5190_1.png')
dCNN = 'CNN/OldDetector.mat';
l = load(dCNN);
dNet = l.dNet;

img2cut = imread(rootdir);

if (size(img2cut,3) == 3)
    img2cut = rgb2gray(img2cut);
end
num1  = size(img2cut,2);
num75 = num1*.75;
num150 = num1*1.5;


img2cut = imresize(img2cut,[32,32]);

imagesdir = '/cutImages/';
rootdir = strcat(curdir,imagesdir)
subdir = [rootdir '1'];

for x = 1:3:numI
    imgloc = strcat(subdir,'/',int2str(x), '.png');
    cutimg = img2cut(:,x:31+x);
    imwrite(cutimg,imgloc);    
end

%% Detecting characters
imagesdir = '/cutImages/';
rootdir = strcat(curdir,imagesdir)
subdir = [rootdir '1'];

CutImages = imageDatastore(...
    subdir, ...
    'IncludeSubfolders',true, ...
    'LabelSource', 'foldernames');
[CNNlabel, CNNscore] = classify(dNet, CutImages);

%% Plotting
Y = CNNscore(:,1) - .5;
X = 0:size(Y,1)-1;
figure
plot(X,Y)
figure
imshow(img2cut);

%% Clean Up
myFolder = 'C:\Users\schaffqg\Documents\GitHub\Image-Translation\Code\cutImages\1\1';
% Check to make sure that folder actually exists.  Warn user if it doesn't.
if ~isdir(myFolder)
  errorMessage = sprintf('Error: The following folder does not exist:\n%s', myFolder);
  uiwait(warndlg(errorMessage));
  return;
end
% Get a list of all files in the folder with the desired file name pattern.
filePattern = fullfile(myFolder, '*.png'); % Change to whatever pattern you need.
theFiles = dir(filePattern);
for k = 1 : length(theFiles)
  baseFileName = theFiles(k).name;
  fullFileName = fullfile(myFolder, baseFileName);
  fprintf(1, 'Now deleting %s\n', fullFileName);
  delete(fullFileName);
end
